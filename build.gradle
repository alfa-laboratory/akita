buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.25.3"
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.1'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.10.0'

        classpath 'com.netflix.nebula:nebula-release-plugin:4.1.0'
        classpath 'com.netflix.nebula:gradle-info-plugin:3.2.1'
        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:3.3.0'
        classpath 'com.netflix.nebula:nebula-publishing-plugin:4.9.1'
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'base'
apply plugin: 'maven-publish'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'license'
apply plugin: 'distribution'

// ==== nebula
apply plugin: 'nebula.release'
apply plugin: 'nebula.maven-publish'
apply plugin: 'nebula.source-jar'
apply plugin: 'nebula.javadoc-jar'

group = 'ru.alfabank.tests'

description = """light testing framework Akita"""

project.ext {
    selenideVersion = '6.1.1'
}

dependencies {
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.13.0'
    implementation 'com.qaprosoft:carina-proxy:7.2.14'
    implementation group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.58'
    compile group: 'org.hamcrest', name: 'hamcrest-library', version: '2.1'
    compile group: 'org.codehaus.groovy', name: 'groovy', version: '2.4.8'
    compile group: 'org.reflections', name: 'reflections', version: '0.9.10'
    compile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.2'
    compile group: 'com.codeborne', name: 'selenide', version: selenideVersion
    compile group: 'io.cucumber', name: 'cucumber-java', version: '7.0.0'
    compile group: 'io.cucumber', name: 'cucumber-core', version: '7.0.0'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.21'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.10'
    compile group: 'io.rest-assured', name: 'rest-assured', version: '4.4.0'
    compile group: 'com.google.inject', name: 'guice', version: '4.1.0'
    compile group: 'com.galenframework', name: 'galen-java-support', version: '2.3.6'
    compile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.4.0'
    compile group: 'net.lightbody.bmp', name: 'browsermob-proxy', version: '2.0.0'
    implementation group: 'org.jetbrains', name: 'annotations', version: '15.0'
    implementation group: 'com.github.kklisura.cdt', name: 'cdt-java-client', version: '3.0.0'


    testCompile 'org.mockito:mockito-core:4.1.0'
    testCompile 'org.mockito:mockito-inline:4.1.0'
    testCompile 'com.github.tomakehurst:wiremock-standalone:2.27.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            artifact javadocJar {
                classifier "javadoc"
            }

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

test {
    maxParallelForks = 1
    ignoreFailures = false

    jvmArgs += "-Dfile.encoding=UTF-8"
    jvmArgs += "-Dbrowser=chrome"
    jvmArgs += "-Dselenide.pageLoadStrategy=none"
    useJUnitPlatform()

}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }
}

license {
    header rootProject.file('HEADER')
    exclude ("body.json")
    exclude ("bodyWithParams.json")
    strictCheck false
}